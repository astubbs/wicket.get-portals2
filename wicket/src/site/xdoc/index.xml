<?xml version="1.0"?>

<document>
	<properties>
		<title>Home</title>
	</properties>
	<meta name="keyword" content="wicket, web, j2ee, java" />
	<body>
		<section name="Welcome to Wicket">
			<p>
				Wicket is a Java web application framework that takes
				simplicity, separation of concerns and ease of
				development to a whole new level. Wicket pages can be
				mocked up, previewed and later revised using standard
				WYSIWYG HTML design tools. Dynamic content processing
				and form handling is all handled in Java code using a
				first-class component model backed by POJO data beans
				that can easily be persisted using your favourite
				technology.
			</p>
			<ul>
				<li>
					Check the
					<a href="Features.html">feature list</a>
				</li>
				<li>
					Read
					<a href="Buzz.html">some Wicket buzz</a>
					or some
					<a href="/Blogs.html">Wicket blogs</a>
				</li>
				<li>
					Find out
					<a href="Introduction.html">
						why you should use Wicket
					</a>
				</li>
				<li>
					Check out
					<a href="Examples.html">some examples</a>
					and see them in
					<a
						href="http://www.wicket-library.com/wicket-examples">
						live action
					</a>
				</li>
				<li>
					Download
					<a
						href="http://sourceforge.net/projects/wicket/files">
						Wicket
					</a>
				</li>
			</ul>
			<p>
				Wicket is released under the
				<a href="license.html">Apache License, Version 2.0</a>
				.
			</p>
		</section>
		<section name="Latest News">
			<subsection name="August 27th, 2006 - Wicket 1.2.2 available">
				<p>
				The Wicket team is proud to announce the availability of Wicket 1.2.2, the second maintenance release for Wicket 1.2.
				</p>
				<p>
				This release contains several bug fixes, and some major improvements by receiving backported components from our 2.0 branch, most notably: modal window support and a fully ajaxified Tree and TreeTable. These components can be found in the Wicket Extensions package.
				</p>
				<p>
				Wicket 1.2.2 is a drop-in replacement for Wicket 1.2 and Wicket 1.2.1, however we urge you to test before you put things into production, especially if you are using prototype.js and Wicket ajax. We have put a lot of effort into testing the compatibility between Wicket ajax and prototype, but you may never be sure.
				</p>
				<p>
					Here's a list of things that have changed to Wicket and Wicket Extensions. First Wicket:
				<ul>
				<li>Added Application.exists() and Session.exists() to check for existence of threadlocals
				</li><li>Backported 2.0 CompressedPackageResource and CompressedPackageResourceReference
				</li><li>Backported 2.0 javascript console (much faster)
				</li><li>New wicket-ajax javascript with support for channels
				</li><li>default validator rethrows any exception as ConversionException
				</li><li>Opened up MarkupParser so that it can be used by other components
				</li><li>Close input stream in AbstractResourceStream.asString()
				</li><li>CryptedUrlWebRequestCodingStrategy is spammy
				</li><li>Support for showing expired page from an AJAX request, through identification. This replaces the fix for issue 1528244 in a more generic way.
				</li><li>Error page no longer alters the url so the refresh button will rerun the code that caused the error
				</li><li>RestartResponseAtInterceptPage(Class) will now generate bookmarkable urls
				</li><li>Implemented ajax support for palette
				</li><li>Support for conditional comments such as &lt;!--[if IE]&gt;..&lt;![endif]--&gt;
				</li><li>AjaxLink can now be attached to anything that supports onclick
				</li><li>Link.getBefore/AfterDisabledLink() now behave properly when overridden
				</li><li>Dynamic resource support for portlets
				</li><li>Navigate to another page from ajax request (in other words break out of the ajax request). Like: public void onClick(AjaxRequestTarget target){ setResponsePage(LinksPage.class); }
				</li><li>Render number of rows properly on ListChoice</li>
				</ul>
				And then Wicket Extensions:
				<ul>
				<li>Backported AJAX header contribution code from 2.0.
				</li><li>Backported 2.0 Modal Window
				</li><li>Backported 2.0 Ajax enabled Tree and TreeTable
				</li><li>Fixed markup-id issue of datepicker so it works with ajax
				</li><li>Backported 2.0 wicket-ajax.js compatible version of the autocomplete</li>
				</ul>
			</p>
				<p>
				The Wicket 1.2.2 release can be downloaded from the sourceforge.net servers at a location near you. Follow the next link to go to the downloads page:
				</p>
				<p><a href="http://sourceforge.net/project/showfiles.php?group_id=119783">http://sourceforge.net/project/showfiles.php?group_id=119783</a></p>
				<p>
				The Wicket roadmap is as follows (no dates available). Our main development effort will focus on Wicket 2, which will be Java 5 based. For providing support to those projects already in production or that are bound to Java 1.4, we will continue development of Wicket 1.x, which will consist mainly of backported functionality from Wicket 2 and bug fixes. The next minor release for these projects will be Wicket 1.3.
				</p>
				<p>Have fun!</p>
			</subsection>
			<subsection
				name="Juli 24th, 2006 - Wicket 1.2.1 available">
				<p>
					The	<a href="http://wicketframework.org">Wicket</a>
					project has released the maintenance release Wicket 1.2.1. Wicket is a Java component based 
					web application framework licensed under the open source Apache 2 license. Wicket allows 
					Java developers to create highly dynamic web applications using plain Java and HTML.
				</p>
				<p>
					This maintenance release fixes several bugs, and introduces some new features, amongst others the long awaited
					Portlet (JSR-168) support. Due to time constraints, the portlet examples have not been released yet. You can
					find them in SVN until the time has been found to build a proper release for it. The portlet support is still
					young and there may be some incompatibilities to be found between various portlet containers.
				</p>
				<p>
					Here is an (incomplete) list of bug fixes:
				</p>
				<ul>
					<li>For improved reliability, instead of utilizing cookies and falling back on a quirky JavasScript, we now use window.name to detect whether we are in sync with the proper page map.</li>
					<li>AjaxFormSubmitBehavior no longer incorrectly calls onSubmit() if an error occured during form processing (this aligns it with Button.onSubmit() semantic), instead a new onError() method will be called to allow for error related ajax target processing</li>
					<li>Added IDebugSettings.serializeSessionAttributes instead of relying on logger set to debug mode for the session store</li>
					<li>Several bug fixes to the Palette component</li>
					<li>Property model will now correctly work when chained with a compound model</li>
					<li>Fix for firefox not parsing xml-responses after the pages document.domain has been changed to the base-domain.</li>
					<action type="fix" dev="Eelco Hillenius">Implemented a workaround for an inconsistency between different servlet containers and a bug in the servlet spec which does not seem to state what should happen with empty valued request parameters. This caused Wicket to have some problems (like a failing required test) with Jetty 6.</action>
					<li>Implemented anchors on Links. You can either provide a component that is to be used for getting the anchor, or provide an anchor in the href attribute of &lt;a tags.</li>
					<li>Portlet (JSR-168) support</li>
					<li>Ajax Checkbox now uses onclick instead of onchange which works correctly</li>
					<li>Replace GPL licensed diff util with a Apache licensed one</li>
					<li>Redirect URLs sometimes were not being encoded for redirects, preventing 'cookie-less' operation (most notably when used with redirectTo). Fixed by always encoding redirects low-down; encoding multiple times has no effect.</li>
					<li>Package resources do not have to be pre-registered anymore. When a shared resource is not found, Wicket tries to find a corresponding package resource, and if it finds one, registers it lazily. This fixes quite a few uncomfortable situations, and makes writing custom components easier. Package resources may be blocked by utilizing IPackageResourceGuard (IResourceSettings). By default everything except files with the extension 'html', 'class', 'java', and 'properties' are served. Fixes amongst others bug 1490949. All methods that took Pattern are now deprecated and will be removed in 2.0.
					</li>
					<li>Fixed setting the shared resource path so that it strips any jsession id (or whatever there may be between [path];[whatever][?(optional)] which was a problem when a browser doesn't support cookies</li>
					<li>Added rating component to extensions</li>
					<li>Added Component.replaceWith(Component) to provide better readability and better context for errors that arise from replace actions</li>
				</ul>
				<p>
					The complete list is available here. This release should be a drop in release to the 1.2 version. However
					we encourage you to properly test your application before pushing Wicket 1.2.1 into production.
				</p>
				<p>
					The Wicket team wishes to thank everyone that has worked with us to find and solve those nasty bugs. We hope that
					you will enjoy this release as much as we do. We thank our users for their continued support.
				</p>
			</subsection>
			<subsection
				name="May 24th, 2006 - Wicket 1.2 available">
				<p>
					The	<a href="http://wicketframework.org">Wicket</a>
					project has released Wicket 1.2. Wicket is a Java component based web application 
					framework licensed under the open source Apache 2 license. Wicket allows Java developers to
					create highly dynamic web applications using plain Java and HTML.
				</p>
				<p>
					This is the third major release of the Wicket web framework and marks a major milestone after 7 months
					of hard labor by the core team of developers and the users of the framework.
					This release has been anticipated for several months and sports many major
					new features and improvements over previous releases. Major features of Wicket 1.2 include:
				</p>
				<ul>
					<li>
						Native, cross-platform AJAX support: use AJAX
						without having to write a single line of
						JavaScript. Wicket's AJAX cross-platform
						capabilities
						<a
							href="http://www.musingsfrommars.org/2006/03/ajax-dhtml-library-scorecard.html">
							have been rated 'A'
						</a>
					</li>
					<li>
						Render multiple components in one AJAX call,
						where each component can occupy any part of the
						page
					</li>
					<li>
						Improved markup inheritance: panels, pages,
						header contributions
					</li>
					<li>
						Improved and simplified internationalization
						(i18n) support, using &lt;wicket:message&gt;,
						better resource bundle lookup strategy
					</li>
					<li>
						Out of the box default resource bundles for many
						languages, including
						English, German, Spanish, Portugese, French, 
						Hungarian, Dutch, Finnish, Danish, Swedish, Japanese, 
						Chinese, Italian, Bulgarian and Farzi (Iranian).
					</li>
					<li>
						Multiple form component validation, validate two
						or more fields that are related
					</li>
					<li>
						Improved form handling: clear form validation
						workflow that allows you to much easier defined
						required and type conversion attributes of a
						form component
					</li>
					<li>Nice URL support through URL mounting</li>
					<li>Markup fragments (inline panels)</li>
					<li>
						Improved performance by replacing OGNL with our
						own object graph language parser
					</li>
					<li>
						Response filter support, added ServerTime and
						ServerClientTime filters
					</li>
					<li>
						Reloading of resource bundles in development
						mode
					</li>
					<li>
						Improved unit test support for your Wicket
						components and pages through the WicketTester,
						create unittests that run outside the container.
					</li>
					<li>
						Out-of-the-box AJAX components: paging
						navigator, link with fallback, auto-updater,
						AJAX form, AJAX submit buttons, etc.
					</li>
					<li>
						Improved authorization and authentication
						support, giving you the power to specify
						authorization at the component level. An example
						project featuring a role based, annotation
						framework is now part of the standard
						distribution.
					</li>
					<li>
						Spring support for injecting your business logic
						into your web pages in a non-intrusive manner,
						while still being able to use the convenient
						Wicket idiom for creating pages (using the Java
						<tt>new</tt>
						operator).
					</li>
					<li>
						Improved settings system: settings are now
						partitioned into logical groupings to make them
						easier to find
					</li>
					<li>Numerous bug fixes and minor improvements</li>
				</ul>
				<p>
					Wicket runs on any application server supporting the servlet 
					API version 2.3 and higher, and will work on Java 1.4 SDK's 
					or newer.
				</p>
				<p>
					We have tried to keep API changes to a minimum, but
					had to change and remove some methods and classes.
					Wicket 1.2 will not be a drop-in replacement, though
					most of your application's pages and components
					should not be affected. There is a migration guide
					available on our wiki:
				</p>
				<p>
					<a
						href="http://www.wicket-wiki.org.uk/wiki/index.php/Migrate-1.2">
						Migrating to Wicket 1.2
					</a>
				</p>
				<p>
					The Wicket 1.2 release is a highly anticipated 
					major landmark in the history of Wicket. The core
					development team wishes to extend their gratitude to
					all users who helped build and test this release. Enjoy
					and have fun!
				</p>
			</subsection>
			<subsection
				name="May 14th, 2006 - New examples available">
				<p>
					We have created two new examples giving a quick introduction
					to new Wicket 1.2 features. Here are the links to the articles:
				</p>
				<ul>
					<li><a href="ExampleAjaxCounter.html">Ajax Counter example</a></li>
					<li><a href="ExampleUsingFragments.html">Using fragments example</a></li>
				</ul>
			</subsection>
			<p>
				See
				<a href="News.html">the news archive</a>
				for more (older) news.
			</p>
		</section>
		<section name="Special Thanks">
			<p>
				The Wicket development team would like to thank the
				following partners for supporting Open Source in general
				and Wicket in particular.
			</p>
			<a href="http://www.topicus.nl" target="_blank"
				class="logoLink">
				<img alt="Topicus B.V." src="images/topicus.gif" />
			</a>
			<a href="http://www.yourkit.com" target="_blank"
				class="logoLink">
				<img alt="YourKit" src="images/yip_logo.gif" />
			</a>
			<a href="http://www.cenqua.com" target="_blank"
				class="logoLink">
				<img alt="Clover"
					src="http://www.cenqua.com/clover/doc/skin/images/clover_logo.gif" />
			</a>
			<p>
				<!--ONESTAT SCRIPTCODE START-->
				<!--
					// Het wijzigen van deze code is niet toegestaan en zal uw account definitief blokkeren!
					// Account ID : 239584
					// Website URL: http://wicket.sourceforge.net
					// Copyright (C) 2002-2005 OneStat.com All Rights Reserved
				-->
				<div id="OneStatTag">
					<table border='0' cellpadding='0' cellspacing='0'>
						<tr>
							<td align='center'>
								<script type="text/javascript"
									src="onestat.js">
								</script>
								<noscript>
									<a href="http://www.onestat.com">
										<img border="0"
											src="http://stat.onestat.com/stat.aspx?tagver=2&amp;sid=239584&amp;js=No&amp;"
											ALT="online web site analyser" />
									</a>
									<br />
									<a href="http://www.onestat.com">
										online web site analyser
									</a>
								</noscript>
							</td>
						</tr>
						<tr>
							<td align='center'>
								<div
									style="DISPLAY: none; FONT-WEIGHT: bold; FONT-SIZE: 7pt; COLOR: black; FONT-FAMILY: 'Verdana'; HEIGHT: 15px">
									<a href="http://www.onestat.com"
										style="text-decoration:none; COLOR: black;" target="_blank">
										webtraffic analysis
									</a>
								</div>
							</td>
						</tr>
					</table>
				</div>
				<!--ONESTAT SCRIPTCODE END-->
			</p>
		</section>
	</body>
</document>