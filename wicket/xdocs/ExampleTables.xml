<?xml version="1.0"?>
<document>
	<properties>
		<title>Wicket Example: Tables</title>
	</properties>

	<meta
		name="keyword"
		content="wicket, example, web, j2ee, java" />

	<body>
		<section name="Tables Example">
			<p>
				A quick teaser here that shows what Tables look like in Wicket. The GuestBook
				example in the Wicket SDK has a form that allows users to enter comments. It draws
				its list of comments in a table and shows how easy it is to do that. What's more,
				tables automatically support structural modifications such as move up/down links and
				remove links. In doing this, the dreaded "back button" problem is automatically and
				transparently dealt with by Wicket.
			</p>
			<img src="images/image005.png" alt="Tables" />
			<subsection name="GuestBook.java">
				<source><![CDATA[public class GuestBook extends HtmlPage
{
    public GuestBook(final PageParameters parameters)
    {
        // Add comment form
        add(new CommentForm("commentForm"));
 
        // Add table of existing comments
        add(new Table("comments", commentList)
        {
            public void populateCell(final Cell cell)
            {
                final Comment comment = (Comment)cell.getModel();
                cell.add(new Label("date", comment.getDate()));
                cell.add(new MultiLineLabel("text", comment.getText()));
            }  
        });
    }
    /* ... */
}]]></source>
			</subsection>
			<subsection name="GuestBook.html">
				<source><![CDATA[<html>
<body>
  <form componentName = "commentForm">
    Add your comment here:
    <p>
    <textarea componentName = "text">This is a comment</textarea>
    <p>
    <input type = "submit" value = "Submit"/>
  </form>
  <p>
  <span componentName = "comments">
      <p>
          <span componentName = "date">1/1/2004</span><br>
          <span componentName = "text">Comment text goes here.</span>
      </p>
  </span>
</body>
</html>]]></source>
			</subsection>
		</section>
	</body>
</document>